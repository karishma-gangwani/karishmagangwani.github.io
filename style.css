/*! tailwindcss v4.1.6 | MIT License | https://tailwindcss.com */
@layer properties {
    @supports (((-webkit-hyphens: none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))) {
        *,:before,:after,::backdrop {
            --tw-leading:initial;
            --tw-border-style: solid;
            --tw-font-weight: initial;
            --tw-shadow: 0 0 #0000;
            --tw-shadow-color: initial;
            --tw-shadow-alpha: 100%;
            --tw-inset-shadow: 0 0 #0000;
            --tw-inset-shadow-color: initial;
            --tw-inset-shadow-alpha: 100%;
            --tw-ring-color: initial;
            --tw-ring-shadow: 0 0 #0000;
            --tw-inset-ring-color: initial;
            --tw-inset-ring-shadow: 0 0 #0000;
            --tw-ring-inset: initial;
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-color: #fff;
            --tw-ring-offset-shadow: 0 0 #0000;
            --tw-duration: initial;
            --tw-ease: initial;
            --tw-rotate-x: initial;
            --tw-rotate-y: initial;
            --tw-rotate-z: initial;
            --tw-skew-x: initial;
            --tw-skew-y: initial;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-tracking: initial;
            --tw-blur: initial;
            --tw-brightness: initial;
            --tw-contrast: initial;
            --tw-grayscale: initial;
            --tw-hue-rotate: initial;
            --tw-invert: initial;
            --tw-opacity: initial;
            --tw-saturate: initial;
            --tw-sepia: initial;
            --tw-drop-shadow: initial;
            --tw-drop-shadow-color: initial;
            --tw-drop-shadow-alpha: 100%;
            --tw-drop-shadow-size: initial;
            --tw-backdrop-blur: initial;
            --tw-backdrop-brightness: initial;
            --tw-backdrop-contrast: initial;
            --tw-backdrop-grayscale: initial;
            --tw-backdrop-hue-rotate: initial;
            --tw-backdrop-invert: initial;
            --tw-backdrop-opacity: initial;
            --tw-backdrop-saturate: initial;
            --tw-backdrop-sepia: initial;
            --tw-content: "";
            --tw-translate-x: 0;
            --tw-translate-y: 0;
            --tw-translate-z: 0
        }
    }
}

@layer theme {
    :root,:host {
        --font-sans: ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
        --font-mono: ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;
        --color-orange-100: oklch(95.4% .038 75.164);
        --color-orange-200: oklch(90.1% .076 70.697);
        --color-teal-100: oklch(95.3% .051 180.801);
        --color-teal-200: oklch(91% .096 180.426);
        --color-sky-100: oklch(95.1% .026 236.824);
        --color-sky-200: oklch(90.1% .058 230.902);
        --color-blue-200: oklch(88.2% .059 254.128);
        --color-blue-300: oklch(80.9% .105 251.813);
        --color-blue-500: oklch(62.3% .214 259.815);
        --color-blue-800: oklch(42.4% .199 265.638);
        --color-indigo-500: oklch(58.5% .233 277.117);
        --color-slate-50: oklch(98.4% .003 247.858);
        --color-slate-200: oklch(92.9% .013 255.508);
        --color-slate-300: oklch(86.9% .022 252.894);
        --color-slate-400: oklch(70.4% .04 256.788);
        --color-slate-700: oklch(37.2% .044 257.287);
        --color-slate-800: oklch(27.9% .041 260.031);
        --color-slate-950: oklch(12.9% .042 264.695);
        --color-gray-50: oklch(98.5% .002 247.839);
        --color-gray-100: oklch(96.7% .003 264.542);
        --color-gray-200: oklch(92.8% .006 264.531);
        --color-gray-300: oklch(87.2% .01 258.338);
        --color-gray-400: oklch(70.7% .022 261.325);
        --color-gray-500: oklch(55.1% .027 264.364);
        --color-gray-600: oklch(44.6% .03 256.802);
        --color-gray-700: oklch(37.3% .034 259.733);
        --color-gray-800: oklch(27.8% .033 256.848);
        --color-gray-900: oklch(21% .034 264.665);
        --color-black: #000;
        --color-white: #fff;
        --spacing: .25rem;
        --container-md: 28rem;
        --container-xl: 36rem;
        --container-3xl: 48rem;
        --container-6xl: 72rem;
        --text-xs: .75rem;
        --text-xs--line-height: calc(1/.75);
        --text-sm: .875rem;
        --text-sm--line-height: calc(1.25/.875);
        --text-base: 1rem;
        --text-base--line-height: 1.5 ;
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75/1.125);
        --text-xl: 1.25rem;
        --text-xl--line-height: calc(1.75/1.25);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2/1.5);
        --text-3xl: 1.875rem;
        --text-3xl--line-height: 1.2 ;
        --text-4xl: 2.25rem;
        --text-4xl--line-height: calc(2.5/2.25);
        --text-5xl: 3rem;
        --text-5xl--line-height: 1;
        --text-6xl: 3.75rem;
        --text-6xl--line-height: 1;
        --text-9xl: 8rem;
        --text-9xl--line-height: 1;
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --font-weight-extrabold: 800;
        --tracking-tighter: -.05em;
        --tracking-tight: -.025em;
        --tracking-normal: 0em;
        --leading-tight: 1.25;
        --leading-snug: 1.375;
        --leading-relaxed: 1.625;
        --radius-sm: .25rem;
        --radius-md: .375rem;
        --radius-lg: .5rem;
        --radius-xl: .75rem;
        --radius-3xl: 1.5rem;
        --ease-in: cubic-bezier(.4,0,1,1);
        --ease-out: cubic-bezier(0,0,.2,1);
        --ease-in-out: cubic-bezier(.4,0,.2,1);
        --blur-md: 12px;
        --default-transition-duration: .15s;
        --default-transition-timing-function: cubic-bezier(.4,0,.2,1);
        --default-font-family: var(--font-sans);
        --default-mono-font-family: var(--font-mono);
        --color-primary-200: #bfdbfe;
        --color-primary-300: #93c5fd;
        --color-primary-400: #60a5fa;
        --color-primary-500: #3b82f6;
        --color-primary-600: #2563eb;
        --color-primary-700: #1d4ed8;
        --color-primary-800: #1e40af;
        --color-secondary-500: #ec4899;
        --color-secondary-600: #db2777
    }
}

@layer base {
    *,:after,:before,::backdrop {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0
    }

    ::file-selector-button {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0
    }

    html,: host {
        -webkit-text-size-adjust:100%;
        tab-size: 4;
        line-height: 1.5;
        font-family: var(--default-font-family,ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings,normal);
        font-variation-settings: var(--default-font-variation-settings,normal);
        -webkit-tap-highlight-color: transparent
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px
    }

    abbr: where([title]) {
        -webkit-text-decoration:underline dotted;
        text-decoration: underline dotted
    }

    h1,h2,h3,h4,h5,h6 {
        font-size: inherit;
        font-weight: inherit
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit
    }

    b,strong {
        font-weight: bolder
    }

    code,kbd,samp,pre {
        font-family: var(--default-mono-font-family,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace);
        font-feature-settings: var(--default-mono-font-feature-settings,normal);
        font-variation-settings: var(--default-mono-font-variation-settings,normal);
        font-size: 1em
    }

    small {
        font-size: 80%
    }

    sub,sup {
        vertical-align: baseline;
        font-size: 75%;
        line-height: 0;
        position: relative
    }

    sub {
        bottom: -.25em
    }

    sup {
        top: -.5em
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse
    }

    :-moz-focusring {
        outline: auto
    }

    progress {
        vertical-align: baseline
    }

    summary {
        display: list-item
    }

    ol,ul,menu {
        list-style: none
    }

    img,svg,video,canvas,audio,iframe,embed,object {
        vertical-align: middle;
        display: block
    }

    img,video {
        max-width: 100%;
        height: auto
    }

    button,input,select,optgroup,textarea {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0
    }

    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0
    }

    :where(select: is([multiple],[size])) optgroup {
        font-weight:bolder
    }

    :where(select: is([multiple],[size])) optgroup option {
        padding-inline-start:20px
    }

    ::file-selector-button {
        margin-inline-end:4px}

    ::placeholder {
        opacity: 1
    }

    @supports (not ((-webkit-appearance: -apple-pay-button))) or (contain-intrinsic-size:1px) {
        ::placeholder {
            color:currentColor
        }

        @supports (color: color-mix(in lab,red,red)) {
            ::placeholder {
                color:color-mix(in oklab,currentcolor 50%,transparent)
            }
        }
    }

    textarea {
        resize: vertical
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit
    }

    ::-webkit-datetime-edit {
        padding-block:0}

    ::-webkit-datetime-edit-year-field {
        padding-block:0}

    ::-webkit-datetime-edit-month-field {
        padding-block:0}

    ::-webkit-datetime-edit-day-field {
        padding-block:0}

    ::-webkit-datetime-edit-hour-field {
        padding-block:0}

    ::-webkit-datetime-edit-minute-field {
        padding-block:0}

    ::-webkit-datetime-edit-second-field {
        padding-block:0}

    ::-webkit-datetime-edit-millisecond-field {
        padding-block:0}

    ::-webkit-datetime-edit-meridiem-field {
        padding-block:0}

    :-moz-ui-invalid {
        box-shadow: none
    }

    button,input: where([type=button],[type=reset],[type=submit]) {
        appearance:button
    }

    ::file-selector-button {
        appearance: button
    }

    ::-webkit-inner-spin-button {
        height: auto
    }

    ::-webkit-outer-spin-button {
        height: auto
    }

    [hidden]: where(:not([hidden=until-found])) {
        display:none!important
    }

    [type=text],input: where(:not([type])),[type=email],[type=url],[type=password],[type=number],[type=date],[type=datetime-local],[type=month],[type=search],[type=tel],[type=time],[type=week],[multiple],textarea,select {
        appearance:none;
        --tw-shadow: 0 0 #0000;
        background-color: #fff;
        border-width: 1px;
        border-color: #6a7282;
        border-radius: 0;
        padding: .5rem .75rem;
        font-size: 1rem;
        line-height: 1.5rem
    }

    :is([type=text],input: where(:not([type])),[type=email],[type=url],[type=password],[type=number],[type=date],[type=datetime-local],[type=month],[type=search],[type=tel],[type=time],[type=week],[multiple],textarea,select):focus {
        outline-offset:2px;
        --tw-ring-inset: var(--tw-empty, );
        --tw-ring-offset-width: 0px;
        --tw-ring-offset-color: #fff;
        --tw-ring-color: oklch(54.6% .245 262.881);
        --tw-ring-offset-shadow: var(--tw-ring-inset)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color);
        --tw-ring-shadow: var(--tw-ring-inset)0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color);
        box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow);
        border-color: #155dfc;
        outline: 2px solid #0000
    }

    input: :placeholder,textarea::placeholder {
        color:#6a7282;
        opacity: 1
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0
    }

    ::-webkit-date-and-time-value {
        min-height: 1.5em
    }

    ::-webkit-date-and-time-value {
        text-align: inherit
    }

    ::-webkit-datetime-edit {
        display: inline-flex
    }

    ::-webkit-datetime-edit {
        padding-top: 0;
        padding-bottom: 0
    }

    ::-webkit-datetime-edit-year-field {
        padding-top: 0;
        padding-bottom: 0
    }

    ::-webkit-datetime-edit-month-field {
        padding-top: 0;
        padding-bottom: 0
    }

    ::-webkit-datetime-edit-day-field {
        padding-top: 0;
        padding-bottom: 0
    }

    ::-webkit-datetime-edit-hour-field {
        padding-top: 0;
        padding-bottom: 0
    }

    ::-webkit-datetime-edit-minute-field {
        padding-top: 0;
        padding-bottom: 0
    }

    ::-webkit-datetime-edit-second-field {
        padding-top: 0;
        padding-bottom: 0
    }

    ::-webkit-datetime-edit-millisecond-field {
        padding-top: 0;
        padding-bottom: 0
    }

    ::-webkit-datetime-edit-meridiem-field {
        padding-top: 0;
        padding-bottom: 0
    }

    select {
        print-color-adjust: exact;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='oklch(55.1%25 0.027 264.364)' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
        background-position: right .5rem center;
        background-repeat: no-repeat;
        background-size: 1.5em 1.5em;
        padding-right: 2.5rem
    }

    [multiple],[size]: where(select:not([size="1"])) {
        background-image:initial;
        background-position: initial;
        background-repeat: unset;
        background-size: initial;
        print-color-adjust: unset;
        padding-right: .75rem
    }

    [type=checkbox],[type=radio] {
        appearance: none;
        print-color-adjust: exact;
        vertical-align: middle;
        -webkit-user-select: none;
        user-select: none;
        color: #155dfc;
        --tw-shadow: 0 0 #0000;
        background-color: #fff;
        background-origin: border-box;
        border-width: 1px;
        border-color: #6a7282;
        flex-shrink: 0;
        width: 1rem;
        height: 1rem;
        padding: 0;
        display: inline-block
    }

    [type=checkbox] {
        border-radius: 0
    }

    [type=radio] {
        border-radius: 100%
    }

    [type=checkbox]: focus,[type=radio]:focus {
        outline-offset:2px;
        --tw-ring-inset: var(--tw-empty, );
        --tw-ring-offset-width: 2px;
        --tw-ring-offset-color: #fff;
        --tw-ring-color: oklch(54.6% .245 262.881);
        --tw-ring-offset-shadow: var(--tw-ring-inset)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color);
        --tw-ring-shadow: var(--tw-ring-inset)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color);
        box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow);
        outline: 2px solid #0000
    }

    [type=checkbox]: checked,[type=radio]:checked {
        background-color:currentColor;
        background-position: 50%;
        background-repeat: no-repeat;
        background-size: 100% 100%;
        border-color: #0000
    }

    [type=checkbox]: checked {
        background-image:url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e")
    }

    @media (forced-colors:active) {
        [type=checkbox]:checked {
            appearance: auto
        }
    }

    [type=radio]: checked {
        background-image:url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e")
    }

    @media (forced-colors:active) {
        [type=radio]:checked {
            appearance: auto
        }
    }

    [type=checkbox]: checked:hover,[type=checkbox]:checked:focus,[type=radio]:checked:hover,[type=radio]:checked:focus {
        background-color:currentColor;
        border-color: #0000
    }

    [type=checkbox]: indeterminate {
        background-color:currentColor;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
        background-position: 50%;
        background-repeat: no-repeat;
        background-size: 100% 100%;
        border-color: #0000
    }

    @media (forced-colors:active) {
        [type=checkbox]:indeterminate {
            appearance: auto
        }
    }

    [type=checkbox]: indeterminate:hover,[type=checkbox]:indeterminate:focus {
        background-color:currentColor;
        border-color: #0000
    }

    [type=file] {
        background: unset;
        border-color: inherit;
        font-size: unset;
        line-height: inherit;
        border-width: 0;
        border-radius: 0;
        padding: 0
    }

    [type=file]: focus {
        outline:1px solid buttontext;
        outline: 1px auto -webkit-focus-ring-color
    }
}

@layer components;@layer utilities {
    .pointer-events-none {
        pointer-events: none
    }

    .invisible {
        visibility: hidden
    }

    .visible {
        visibility: visible
    }

    .sr-only {
        clip: rect(0,0,0,0);
        white-space: nowrap;
        border-width: 0;
        width: 1px;
        height: 1px;
        margin: -1px;
        padding: 0;
        position: absolute;
        overflow: hidden
    }

    .absolute {
        position: absolute
    }

    .fixed {
        position: fixed
    }

    .relative {
        position: relative
    }

    .static {
        position: static
    }

    .sticky {
        position: sticky
    }

    .inset-0 {
        inset: calc(var(--spacing)*0)
    }

    .top-0 {
        top: calc(var(--spacing)*0)
    }

    .left-\[-26px\] {
        left: -26px
    }

    .isolate {
        isolation: isolate
    }

    .z-40 {
        z-index: 40
    }

    .container {
        width: 100%
    }

    @media (min-width: 40rem) {
        .container {
            max-width:40rem
        }
    }

    @media (min-width: 48rem) {
        .container {
            max-width:48rem
        }
    }

    @media (min-width: 64rem) {
        .container {
            max-width:64rem
        }
    }

    @media (min-width: 80rem) {
        .container {
            max-width:80rem
        }
    }

    @media (min-width: 96rem) {
        .container {
            max-width:96rem
        }
    }

    .m-8 {
        margin: calc(var(--spacing)*8)
    }

    .m-auto {
        margin: auto
    }

    .mx-auto {
        margin-inline:auto}

    .my-2 {
        margin-block:calc(var(--spacing)*2)}

    .my-3 {
        margin-block: calc(var(--spacing)*3)
    }

    .my-12 {
        margin-block:calc(var(--spacing)*12)}

    .my-20 {
        margin-block: calc(var(--spacing)*20)
    }

    .prose {
        color: var(--tw-prose-body);
        --tw-prose-body: oklch(37.3% .034 259.733);
        --tw-prose-headings: oklch(21% .034 264.665);
        --tw-prose-lead: oklch(44.6% .03 256.802);
        --tw-prose-links: oklch(21% .034 264.665);
        --tw-prose-bold: oklch(21% .034 264.665);
        --tw-prose-counters: oklch(55.1% .027 264.364);
        --tw-prose-bullets: oklch(87.2% .01 258.338);
        --tw-prose-hr: oklch(92.8% .006 264.531);
        --tw-prose-quotes: oklch(21% .034 264.665);
        --tw-prose-quote-borders: oklch(92.8% .006 264.531);
        --tw-prose-captions: oklch(55.1% .027 264.364);
        --tw-prose-kbd: oklch(21% .034 264.665);
        --tw-prose-kbd-shadows: NaN NaN NaN;
        --tw-prose-code: oklch(21% .034 264.665);
        --tw-prose-pre-code: oklch(92.8% .006 264.531);
        --tw-prose-pre-bg: oklch(27.8% .033 256.848);
        --tw-prose-th-borders: oklch(87.2% .01 258.338);
        --tw-prose-td-borders: oklch(92.8% .006 264.531);
        --tw-prose-invert-body: oklch(87.2% .01 258.338);
        --tw-prose-invert-headings: #fff;
        --tw-prose-invert-lead: oklch(70.7% .022 261.325);
        --tw-prose-invert-links: #fff;
        --tw-prose-invert-bold: #fff;
        --tw-prose-invert-counters: oklch(70.7% .022 261.325);
        --tw-prose-invert-bullets: oklch(44.6% .03 256.802);
        --tw-prose-invert-hr: oklch(37.3% .034 259.733);
        --tw-prose-invert-quotes: oklch(96.7% .003 264.542);
        --tw-prose-invert-quote-borders: oklch(37.3% .034 259.733);
        --tw-prose-invert-captions: oklch(70.7% .022 261.325);
        --tw-prose-invert-kbd: #fff;
        --tw-prose-invert-kbd-shadows: 255 255 255;
        --tw-prose-invert-code: #fff;
        --tw-prose-invert-pre-code: oklch(87.2% .01 258.338);
        --tw-prose-invert-pre-bg: #00000080;
        --tw-prose-invert-th-borders: oklch(44.6% .03 256.802);
        --tw-prose-invert-td-borders: oklch(37.3% .034 259.733);
        max-width: 65ch;
        font-size: 1rem;
        line-height: 1.75
    }

    .prose :where(p): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.25em;
        margin-bottom: 1.25em
    }

    .prose :where([class~=lead]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-lead);
        margin-top: 1.2em;
        margin-bottom: 1.2em;
        font-size: 1.25em;
        line-height: 1.6
    }

    .prose :where(a): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-links);
        font-weight: 500;
        text-decoration: underline
    }

    .prose :where(strong): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-bold);
        font-weight: 600
    }

    .prose :where(a strong): not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(blockquote strong):not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(thead th strong):not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit
    }

    .prose :where(ol): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.25em;
        margin-bottom: 1.25em;
        padding-inline-start:1.625em;list-style-type: decimal
    }

    .prose :where(ol[type=A]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:upper-alpha
    }

    .prose :where(ol[type=a]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:lower-alpha
    }

    .prose :where(ol[type=A s]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:upper-alpha
    }

    .prose :where(ol[type=a s]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:lower-alpha
    }

    .prose :where(ol[type=I]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:upper-roman
    }

    .prose :where(ol[type=i]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:lower-roman
    }

    .prose :where(ol[type=I s]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:upper-roman
    }

    .prose :where(ol[type=i s]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:lower-roman
    }

    .prose :where(ol[type="1"]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:decimal
    }

    .prose :where(ul): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.25em;
        margin-bottom: 1.25em;
        padding-inline-start:1.625em;list-style-type: disc
    }

    .prose :where(ol>li): not(:where([class~=not-prose],[class~=not-prose] *))::marker {
        color:var(--tw-prose-counters);
        font-weight: 400
    }

    .prose :where(ul>li): not(:where([class~=not-prose],[class~=not-prose] *))::marker {
        color:var(--tw-prose-bullets)
    }

    .prose :where(dt): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-headings);
        margin-top: 1.25em;
        font-weight: 600
    }

    .prose :where(hr): not(:where([class~=not-prose],[class~=not-prose] *)) {
        border-color:var(--tw-prose-hr);
        border-top-width: 1px;
        margin-top: 3em;
        margin-bottom: 3em
    }

    .prose :where(blockquote): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-quotes);
        border-inline-start-width:.25rem;border-inline-start-color:var(--tw-prose-quote-borders);quotes: "“""”""‘""’";
        margin-top: 1.6em;
        margin-bottom: 1.6em;
        padding-inline-start:1em;font-style: italic;
        font-weight: 500
    }

    .prose :where(blockquote p: first-of-type):not(:where([class~=not-prose],[class~=not-prose] *)):before {
        content:open-quote
    }

    .prose :where(blockquote p: last-of-type):not(:where([class~=not-prose],[class~=not-prose] *)):after {
        content:close-quote
    }

    .prose :where(h1): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-headings);
        margin-top: 0;
        margin-bottom: .888889em;
        font-size: 2.25em;
        font-weight: 800;
        line-height: 1.11111
    }

    .prose :where(h1 strong): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit;
        font-weight: 900
    }

    .prose :where(h2): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-headings);
        margin-top: 2em;
        margin-bottom: 1em;
        font-size: 1.5em;
        font-weight: 700;
        line-height: 1.33333
    }

    .prose :where(h2 strong): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit;
        font-weight: 800
    }

    .prose :where(h3): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-headings);
        margin-top: 1.6em;
        margin-bottom: .6em;
        font-size: 1.25em;
        font-weight: 600;
        line-height: 1.6
    }

    .prose :where(h3 strong): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit;
        font-weight: 700
    }

    .prose :where(h4): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-headings);
        margin-top: 1.5em;
        margin-bottom: .5em;
        font-weight: 600;
        line-height: 1.5
    }

    .prose :where(h4 strong): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit;
        font-weight: 700
    }

    .prose :where(img): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:2em;
        margin-bottom: 2em
    }

    .prose :where(picture): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:2em;
        margin-bottom: 2em;
        display: block
    }

    .prose :where(video): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:2em;
        margin-bottom: 2em
    }

    .prose :where(kbd): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-kbd);
        box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows)/10%),0 3px rgb(var(--tw-prose-kbd-shadows)/10%);
        padding-top: .1875em;
        padding-inline-end:.375em;padding-bottom: .1875em;
        border-radius: .3125rem;
        padding-inline-start:.375em;font-family: inherit;
        font-size: .875em;
        font-weight: 500
    }

    .prose :where(code): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-code);
        font-size: .875em;
        font-weight: 600
    }

    .prose :where(code): not(:where([class~=not-prose],[class~=not-prose] *)):before,.prose :where(code):not(:where([class~=not-prose],[class~=not-prose] *)):after {
        content:"`"
    }

    .prose :where(a code): not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(h1 code):not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit
    }

    .prose :where(h2 code): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit;
        font-size: .875em
    }

    .prose :where(h3 code): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit;
        font-size: .9em
    }

    .prose :where(h4 code): not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(blockquote code):not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(thead th code):not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit
    }

    .prose :where(pre): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-pre-code);
        background-color: var(--tw-prose-pre-bg);
        padding-top: .857143em;
        padding-inline-end:1.14286em;padding-bottom: .857143em;
        border-radius: .375rem;
        margin-top: 1.71429em;
        margin-bottom: 1.71429em;
        padding-inline-start:1.14286em;font-size: .875em;
        font-weight: 400;
        line-height: 1.71429;
        overflow-x: auto
    }

    .prose :where(pre code): not(:where([class~=not-prose],[class~=not-prose] *)) {
        font-weight:inherit;
        color: inherit;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
        background-color: #0000;
        border-width: 0;
        border-radius: 0;
        padding: 0
    }

    .prose :where(pre code): not(:where([class~=not-prose],[class~=not-prose] *)):before,.prose :where(pre code):not(:where([class~=not-prose],[class~=not-prose] *)):after {
        content:none
    }

    .prose :where(table): not(:where([class~=not-prose],[class~=not-prose] *)) {
        table-layout:auto;
        width: 100%;
        margin-top: 2em;
        margin-bottom: 2em;
        font-size: .875em;
        line-height: 1.71429
    }

    .prose :where(thead): not(:where([class~=not-prose],[class~=not-prose] *)) {
        border-bottom-width:1px;
        border-bottom-color: var(--tw-prose-th-borders)
    }

    .prose :where(thead th): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-headings);
        vertical-align: bottom;
        padding-inline-end:.571429em;padding-bottom: .571429em;
        padding-inline-start:.571429em;font-weight: 600
    }

    .prose :where(tbody tr): not(:where([class~=not-prose],[class~=not-prose] *)) {
        border-bottom-width:1px;
        border-bottom-color: var(--tw-prose-td-borders)
    }

    .prose :where(tbody tr: last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        border-bottom-width:0
    }

    .prose :where(tbody td): not(:where([class~=not-prose],[class~=not-prose] *)) {
        vertical-align:baseline
    }

    .prose :where(tfoot): not(:where([class~=not-prose],[class~=not-prose] *)) {
        border-top-width:1px;
        border-top-color: var(--tw-prose-th-borders)
    }

    .prose :where(tfoot td): not(:where([class~=not-prose],[class~=not-prose] *)) {
        vertical-align:top
    }

    .prose :where(th,td): not(:where([class~=not-prose],[class~=not-prose] *)) {
        text-align:start
    }

    .prose :where(figure>*): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:0;
        margin-bottom: 0
    }

    .prose :where(figcaption): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-captions);
        margin-top: .857143em;
        font-size: .875em;
        line-height: 1.42857
    }

    .prose :where(picture>img): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:0;
        margin-bottom: 0
    }

    .prose :where(li): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.5em;
        margin-bottom: .5em
    }

    .prose :where(ol>li): not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(ul>li):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-start:.375em
    }

    .prose :where(.prose>ul>li p): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.75em;
        margin-bottom: .75em
    }

    .prose :where(.prose>ul>li>p: first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.25em
    }

    .prose :where(.prose>ul>li>p: last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-bottom:1.25em
    }

    .prose :where(.prose>ol>li>p: first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.25em
    }

    .prose :where(.prose>ol>li>p: last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-bottom:1.25em
    }

    .prose :where(ul ul,ul ol,ol ul,ol ol): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.75em;
        margin-bottom: .75em
    }

    .prose :where(dl): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.25em;
        margin-bottom: 1.25em
    }

    .prose :where(dd): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.5em;
        padding-inline-start:1.625em}

    .prose :where(hr+*): not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(h2+*):not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(h3+*):not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(h4+*):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:0
    }

    .prose :where(thead th: first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-start:0
    }

    .prose :where(thead th: last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-end:0
    }

    .prose :where(tbody td,tfoot td): not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-top:.571429em;
        padding-inline-end:.571429em;padding-bottom: .571429em;
        padding-inline-start:.571429em}

    .prose :where(tbody td: first-child,tfoot td:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-start:0
    }

    .prose :where(tbody td: last-child,tfoot td:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-end:0
    }

    .prose :where(figure): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:2em;
        margin-bottom: 2em
    }

    .prose :where(.prose>:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top: 0
    }

    .prose :where(.prose>:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-bottom: 0
    }

    .prose-lg {
        font-size: 1.125rem;
        line-height: 1.77778
    }

    .prose-lg :where(p): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.33333em;
        margin-bottom: 1.33333em
    }

    .prose-lg :where([class~=lead]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.09091em;
        margin-bottom: 1.09091em;
        font-size: 1.22222em;
        line-height: 1.45455
    }

    .prose-lg :where(blockquote): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.66667em;
        margin-bottom: 1.66667em;
        padding-inline-start:1em}

    .prose-lg :where(h1): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:0;
        margin-bottom: .833333em;
        font-size: 2.66667em;
        line-height: 1
    }

    .prose-lg :where(h2): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.86667em;
        margin-bottom: 1.06667em;
        font-size: 1.66667em;
        line-height: 1.33333
    }

    .prose-lg :where(h3): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.66667em;
        margin-bottom: .666667em;
        font-size: 1.33333em;
        line-height: 1.5
    }

    .prose-lg :where(h4): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.77778em;
        margin-bottom: .444444em;
        line-height: 1.55556
    }

    .prose-lg :where(img): not(:where([class~=not-prose],[class~=not-prose] *)),.prose-lg :where(picture):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.77778em;
        margin-bottom: 1.77778em
    }

    .prose-lg :where(picture>img): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:0;
        margin-bottom: 0
    }

    .prose-lg :where(video): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.77778em;
        margin-bottom: 1.77778em
    }

    .prose-lg :where(kbd): not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-top:.222222em;
        padding-inline-end:.444444em;padding-bottom: .222222em;
        border-radius: .3125rem;
        padding-inline-start:.444444em;font-size: .888889em
    }

    .prose-lg :where(code): not(:where([class~=not-prose],[class~=not-prose] *)) {
        font-size:.888889em
    }

    .prose-lg :where(h2 code): not(:where([class~=not-prose],[class~=not-prose] *)) {
        font-size:.866667em
    }

    .prose-lg :where(h3 code): not(:where([class~=not-prose],[class~=not-prose] *)) {
        font-size:.875em
    }

    .prose-lg :where(pre): not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-top:1em;
        padding-inline-end:1.5em;padding-bottom: 1em;
        border-radius: .375rem;
        margin-top: 2em;
        margin-bottom: 2em;
        padding-inline-start:1.5em;font-size: .888889em;
        line-height: 1.75
    }

    .prose-lg :where(ol): not(:where([class~=not-prose],[class~=not-prose] *)),.prose-lg :where(ul):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.33333em;
        margin-bottom: 1.33333em;
        padding-inline-start:1.55556em}

    .prose-lg :where(li): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.666667em;
        margin-bottom: .666667em
    }

    .prose-lg :where(ol>li): not(:where([class~=not-prose],[class~=not-prose] *)),.prose-lg :where(ul>li):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-start:.444444em
    }

    .prose-lg :where(.prose-lg>ul>li p): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.888889em;
        margin-bottom: .888889em
    }

    .prose-lg :where(.prose-lg>ul>li>p: first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.33333em
    }

    .prose-lg :where(.prose-lg>ul>li>p: last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-bottom:1.33333em
    }

    .prose-lg :where(.prose-lg>ol>li>p: first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.33333em
    }

    .prose-lg :where(.prose-lg>ol>li>p: last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-bottom:1.33333em
    }

    .prose-lg :where(ul ul,ul ol,ol ul,ol ol): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.888889em;
        margin-bottom: .888889em
    }

    .prose-lg :where(dl): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.33333em;
        margin-bottom: 1.33333em
    }

    .prose-lg :where(dt): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.33333em
    }

    .prose-lg :where(dd): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.666667em;
        padding-inline-start:1.55556em}

    .prose-lg :where(hr): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:3.11111em;
        margin-bottom: 3.11111em
    }

    .prose-lg :where(hr+*): not(:where([class~=not-prose],[class~=not-prose] *)),.prose-lg :where(h2+*):not(:where([class~=not-prose],[class~=not-prose] *)),.prose-lg :where(h3+*):not(:where([class~=not-prose],[class~=not-prose] *)),.prose-lg :where(h4+*):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:0
    }

    .prose-lg :where(table): not(:where([class~=not-prose],[class~=not-prose] *)) {
        font-size:.888889em;
        line-height: 1.5
    }

    .prose-lg :where(thead th): not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-end:.75em;
        padding-bottom: .75em;
        padding-inline-start:.75em}

    .prose-lg :where(thead th: first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-start:0
    }

    .prose-lg :where(thead th: last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-end:0
    }

    .prose-lg :where(tbody td,tfoot td): not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-top:.75em;
        padding-inline-end:.75em;padding-bottom: .75em;
        padding-inline-start:.75em}

    .prose-lg :where(tbody td: first-child,tfoot td:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-start:0
    }

    .prose-lg :where(tbody td: last-child,tfoot td:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-end:0
    }

    .prose-lg :where(figure): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.77778em;
        margin-bottom: 1.77778em
    }

    .prose-lg :where(figure>*): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:0;
        margin-bottom: 0
    }

    .prose-lg :where(figcaption): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1em;
        font-size: .888889em;
        line-height: 1.5
    }

    .prose-lg :where(.prose-lg>:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top: 0
    }

    .prose-lg :where(.prose-lg>:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-bottom: 0
    }

    .list-description {
        font-size: var(--text-sm);
        line-height: var(--tw-leading,var(--text-sm--line-height));
        --tw-leading: var(--leading-relaxed);
        line-height: var(--leading-relaxed);
        opacity: .65;
        display: block!important
    }

    @media (prefers-color-scheme: dark) {
        .list-description {
            opacity:.6
        }
    }

    .list-subtitle {
        font-size: var(--text-base);
        line-height: var(--tw-leading,var(--text-base--line-height));
        --tw-leading: var(--leading-snug);
        line-height: var(--leading-snug);
        opacity: .65;
        display: block!important
    }

    @media (prefers-color-scheme: dark) {
        .list-subtitle {
            opacity:.6
        }
    }

    .list-subtitle+.list-description {
        margin-top: calc(var(--spacing)*2)
    }

    .-mt-40 {
        margin-top: calc(var(--spacing)*-40)
    }

    .mt-2 {
        margin-top: calc(var(--spacing)*2)
    }

    .mt-3 {
        margin-top: calc(var(--spacing)*3)
    }

    .mt-4 {
        margin-top: calc(var(--spacing)*4)
    }

    .mt-6 {
        margin-top: calc(var(--spacing)*6)
    }

    .mt-8 {
        margin-top: calc(var(--spacing)*8)
    }

    .mt-\[-4px\] {
        margin-top: -4px
    }

    .mr-1 {
        margin-right: calc(var(--spacing)*1)
    }

    .mr-2 {
        margin-right: calc(var(--spacing)*2)
    }

    .mr-4 {
        margin-right: calc(var(--spacing)*4)
    }

    .mr-\[-0\.025em\] {
        margin-right: -.025em
    }

    .mb-0\.5 {
        margin-bottom: calc(var(--spacing)*.5)
    }

    .mb-2 {
        margin-bottom: calc(var(--spacing)*2)
    }

    .mb-3 {
        margin-bottom: calc(var(--spacing)*3)
    }

    .mb-4 {
        margin-bottom: calc(var(--spacing)*4)
    }

    .mb-6 {
        margin-bottom: calc(var(--spacing)*6)
    }

    .mb-8 {
        margin-bottom: calc(var(--spacing)*8)
    }

    .mb-10 {
        margin-bottom: calc(var(--spacing)*10)
    }

    .mb-16 {
        margin-bottom: calc(var(--spacing)*16)
    }

    .mb-20 {
        margin-bottom: calc(var(--spacing)*20)
    }

    .mb-40 {
        margin-bottom: calc(var(--spacing)*40)
    }

    .-ml-1\.5 {
        margin-left: calc(var(--spacing)*-1.5)
    }

    .-ml-2 {
        margin-left: calc(var(--spacing)*-2)
    }

    .ml-1\.5 {
        margin-left: calc(var(--spacing)*1.5)
    }

    .ml-2 {
        margin-left: calc(var(--spacing)*2)
    }

    .ml-4 {
        margin-left: calc(var(--spacing)*4)
    }

    .btn {
        border-radius: var(--radius-sm);
        border-style: var(--tw-border-style);
        padding-inline:calc(var(--spacing)*6);padding-block: calc(var(--spacing)*3);
        text-align: center;
        font-size: var(--text-base);
        line-height: var(--tw-leading,var(--text-base--line-height));
        --tw-leading: var(--leading-snug);
        line-height: var(--leading-snug);
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color,#0000001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow);
        transition-property: color,background-color,border-color,outline-color,text-decoration-color,fill,stroke,--tw-gradient-from,--tw-gradient-via,--tw-gradient-to,opacity,box-shadow,transform,translate,scale,rotate,filter,-webkit-backdrop-filter,backdrop-filter,display,visibility,content-visibility,overlay,pointer-events;
        transition-timing-function: var(--tw-ease,var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,var(--default-transition-duration));
        --tw-duration: .2s;
        --tw-ease: var(--ease-in);
        transition-duration: .2s;
        transition-timing-function: var(--ease-in);
        border-width: 1px;
        border-color: #0000;
        justify-content: center;
        align-items: center;
        display: inline-flex
    }

    .btn:focus {
        --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentcolor);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow);
        --tw-ring-color: var(--color-blue-500);
        --tw-ring-offset-width: 2px;
        --tw-ring-offset-shadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color);
        --tw-ring-offset-color: var(--color-blue-200)
    }

    .block {
        display: block
    }

    .contents {
        display: contents
    }

    .flex {
        display: flex
    }

    .grid {
        display: grid
    }

    .hidden {
        display: none
    }

    .inline {
        display: inline
    }

    .inline-block {
        display: inline-block
    }

    .inline-flex {
        display: inline-flex
    }

    .h-4 {
        height: calc(var(--spacing)*4)
    }

    .h-5 {
        height: calc(var(--spacing)*5)
    }

    .h-6 {
        height: calc(var(--spacing)*6)
    }

    .h-full {
        height: 100%
    }

    .h-screen {
        height: 100vh
    }

    .min-h-\[50vh\] {
        min-height: 50vh
    }

    .w-4 {
        width: calc(var(--spacing)*4)
    }

    .w-5 {
        width: calc(var(--spacing)*5)
    }

    .w-6 {
        width: calc(var(--spacing)*6)
    }

    .w-full {
        width: 100%
    }

    .max-w-3xl {
        max-width: var(--container-3xl)
    }

    .max-w-6xl {
        max-width: var(--container-6xl)
    }

    .max-w-md {
        max-width: var(--container-md)
    }

    .max-w-none {
        max-width: none
    }

    .max-w-xl {
        max-width: var(--container-xl)
    }

    .flex-initial {
        flex: 0 auto
    }

    .flex-none {
        flex: none
    }

    .shrink-0 {
        flex-shrink: 0
    }

    .grow {
        flex-grow: 1
    }

    .transform {
        transform: var(--tw-rotate-x,)var(--tw-rotate-y,)var(--tw-rotate-z,)var(--tw-skew-x,)var(--tw-skew-y,)
    }

    .cursor-pointer {
        cursor: pointer
    }

    .resize {
        resize: both
    }

    .grid-cols-1 {
        grid-template-columns: repeat(1,minmax(0,1fr))
    }

    .flex-col {
        flex-direction: column
    }

    .flex-row {
        flex-direction: row
    }

    .flex-nowrap {
        flex-wrap: nowrap
    }

    .flex-wrap {
        flex-wrap: wrap
    }

    .items-baseline {
        align-items: baseline
    }

    .items-center {
        align-items: center
    }

    .justify-between {
        justify-content: space-between
    }

    .justify-center {
        justify-content: center
    }

    .gap-1\.5 {
        gap: calc(var(--spacing)*1.5)
    }

    .gap-2 {
        gap: calc(var(--spacing)*2)
    }

    .gap-4 {
        gap: calc(var(--spacing)*4)
    }

    .gap-6 {
        gap: calc(var(--spacing)*6)
    }

    .gap-x-4 {
        column-gap: calc(var(--spacing)*4)
    }

    .gap-y-8 {
        row-gap: calc(var(--spacing)*8)
    }

    .self-center {
        align-self: center
    }

    .overflow-hidden {
        overflow: hidden
    }

    .rounded-3xl {
        border-radius: var(--radius-3xl)
    }

    .rounded-full {
        border-radius: 3.40282e38px
    }

    .rounded-lg {
        border-radius: var(--radius-lg)
    }

    .border {
        border-style: var(--tw-border-style);
        border-width: 1px
    }

    .border-t {
        border-top-style: var(--tw-border-style);
        border-top-width: 1px
    }

    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px
    }

    .border-gray-200 {
        border-color: var(--color-gray-200)
    }

    .border-gray-300 {
        border-color: var(--color-gray-300)
    }

    .border-primary-600\/30 {
        border-color: #2563eb4d
    }

    @supports (color: color-mix(in lab,red,red)) {
        .border-primary-600\/30 {
            border-color:color-mix(in oklab,var(--color-primary-600)30%,transparent)
        }
    }

    .bg-gray-50 {
        background-color: var(--color-gray-50)
    }

    .bg-gray-100 {
        background-color: var(--color-gray-100)
    }

    .bg-gray-200\/80 {
        background-color: #e5e7ebcc
    }

    @supports (color: color-mix(in lab,red,red)) {
        .bg-gray-200\/80 {
            background-color:color-mix(in oklab,var(--color-gray-200)80%,transparent)
        }
    }

    .bg-gray-900 {
        background-color: var(--color-gray-900)
    }

    .bg-orange-100 {
        background-color: var(--color-orange-100)
    }

    .bg-primary-600\/90 {
        background-color: #2563ebe6
    }

    @supports (color: color-mix(in lab,red,red)) {
        .bg-primary-600\/90 {
            background-color:color-mix(in oklab,var(--color-primary-600)90%,transparent)
        }
    }

    .bg-primary-700 {
        background-color: var(--color-primary-700)
    }

    .bg-sky-100\/90 {
        background-color: #dff2fee6
    }

    @supports (color: color-mix(in lab,red,red)) {
        .bg-sky-100\/90 {
            background-color:color-mix(in oklab,var(--color-sky-100)90%,transparent)
        }
    }

    .bg-slate-50 {
        background-color: var(--color-slate-50)
    }

    .bg-teal-100 {
        background-color: var(--color-teal-100)
    }

    .bg-white {
        background-color: var(--color-white)
    }

    .bg-linear-to-r {
        --tw-gradient-position: to right;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }

    @supports (background-image: linear-gradient(in lab,red,red)) {
        .bg-linear-to-r {
            --tw-gradient-position:to right in oklab
        }
    }

    .from-primary-500 {
        --tw-gradient-from: var(--color-primary-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .to-secondary-500 {
        --tw-gradient-to: var(--color-secondary-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .bg-clip-text {
        -webkit-background-clip: text;
        background-clip: text
    }

    .p-2\.5 {
        padding: calc(var(--spacing)*2.5)
    }

    .p-\[12px\] {
        padding: 12px
    }

    .p-\[20px\] {
        padding: 20px
    }

    .px-1\.5 {
        padding-inline: calc(var(--spacing)*1.5)
    }

    .px-2 {
        padding-inline:calc(var(--spacing)*2)}

    .px-3 {
        padding-inline: calc(var(--spacing)*3)
    }

    .px-4 {
        padding-inline:calc(var(--spacing)*4)}

    .px-5 {
        padding-inline: calc(var(--spacing)*5)
    }

    .px-6 {
        padding-inline:calc(var(--spacing)*6)}

    .px-8 {
        padding-inline: calc(var(--spacing)*8)
    }

    .px-10 {
        padding-inline:calc(var(--spacing)*10)}

    .py-0\.5 {
        padding-block: calc(var(--spacing)*.5)
    }

    .py-2 {
        padding-block:calc(var(--spacing)*2)}

    .py-3 {
        padding-block: calc(var(--spacing)*3)
    }

    .py-4 {
        padding-block:calc(var(--spacing)*4)}

    .py-6 {
        padding-block: calc(var(--spacing)*6)
    }

    .py-8 {
        padding-block:calc(var(--spacing)*8)}

    .py-12 {
        padding-block: calc(var(--spacing)*12)
    }

    .pt-4 {
        padding-top: calc(var(--spacing)*4)
    }

    .pt-8 {
        padding-top: calc(var(--spacing)*8)
    }

    .pt-20 {
        padding-top: calc(var(--spacing)*20)
    }

    .pr-\[0\.025em\] {
        padding-right: .025em
    }

    .pb-4 {
        padding-bottom: calc(var(--spacing)*4)
    }

    .pb-10 {
        padding-bottom: calc(var(--spacing)*10)
    }

    .pb-16 {
        padding-bottom: calc(var(--spacing)*16)
    }

    .pb-20 {
        padding-bottom: calc(var(--spacing)*20)
    }

    .pl-2 {
        padding-left: calc(var(--spacing)*2)
    }

    .text-center {
        text-align: center
    }

    .align-middle {
        vertical-align: middle
    }

    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading,var(--text-2xl--line-height))
    }

    .text-3xl {
        font-size: var(--text-3xl);
        line-height: var(--tw-leading,var(--text-3xl--line-height))
    }

    .text-4xl {
        font-size: var(--text-4xl);
        line-height: var(--tw-leading,var(--text-4xl--line-height))
    }

    .text-5xl {
        font-size: var(--text-5xl);
        line-height: var(--tw-leading,var(--text-5xl--line-height))
    }

    .text-9xl {
        font-size: var(--text-9xl);
        line-height: var(--tw-leading,var(--text-9xl--line-height))
    }

    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading,var(--text-lg--line-height))
    }

    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading,var(--text-sm--line-height))
    }

    .text-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading,var(--text-xl--line-height))
    }

    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading,var(--text-xs--line-height))
    }

    .text-\[10px\] {
        font-size: 10px
    }

    .text-\[16px\] {
        font-size: 16px
    }

    .text-\[clamp\(0\.5rem\,6vw\,1\.875rem\)\] {
        font-size: clamp(.5rem,6vw,1.875rem)
    }

    .leading-snug {
        --tw-leading: var(--leading-snug);
        line-height: var(--leading-snug)
    }

    .leading-tight {
        --tw-leading: var(--leading-tight);
        line-height: var(--leading-tight)
    }

    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold)
    }

    .font-extrabold {
        --tw-font-weight: var(--font-weight-extrabold);
        font-weight: var(--font-weight-extrabold)
    }

    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium)
    }

    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold)
    }

    .tracking-normal {
        --tw-tracking: var(--tracking-normal);
        letter-spacing: var(--tracking-normal)
    }

    .tracking-tight {
        --tw-tracking: var(--tracking-tight);
        letter-spacing: var(--tracking-tight)
    }

    .tracking-tighter {
        --tw-tracking: var(--tracking-tighter);
        letter-spacing: var(--tracking-tighter)
    }

    .break-words {
        overflow-wrap: break-word
    }

    .whitespace-nowrap {
        white-space: nowrap
    }

    .text-black\/70 {
        color: #000000b3
    }

    @supports (color: color-mix(in lab,red,red)) {
        .text-black\/70 {
            color:color-mix(in oklab,var(--color-black)70%,transparent)
        }
    }

    .text-gray-500 {
        color: var(--color-gray-500)
    }

    .text-gray-600 {
        color: var(--color-gray-600)
    }

    .text-gray-700 {
        color: var(--color-gray-700)
    }

    .text-gray-900 {
        color: var(--color-gray-900)
    }

    .text-primary-600 {
        color: var(--color-primary-600)
    }

    .text-transparent {
        color: #0000
    }

    .text-white {
        color: var(--color-white)
    }

    .italic {
        font-style: italic
    }

    .underline {
        text-decoration-line: underline
    }

    .decoration-black {
        -webkit-text-decoration-color: var(--color-black);
        text-decoration-color: var(--color-black)
    }

    .decoration-secondary-500 {
        -webkit-text-decoration-color: var(--color-secondary-500);
        text-decoration-color: var(--color-secondary-500)
    }

    .decoration-\[3px\] {
        text-decoration-thickness: 3px
    }

    .underline-offset-\[7px\] {
        text-underline-offset: 7px
    }

    .antialiased {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale
    }

    .opacity-0 {
        opacity: 0
    }

    .opacity-80 {
        opacity: .8
    }

    .opacity-90 {
        opacity: .9
    }

    .shadow-md {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color,#0000001a),0 2px 4px -2px var(--tw-shadow-color,#0000001a);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
    }

    .shadow-none {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
    }

    .shadow-xs {
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color,#0000000d);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
    }

    .drop-shadow-\[0_2px_2px_rgba\(0\,0\,0\,0\.1\)\] {
        --tw-drop-shadow-size: drop-shadow(0 2px 2px var(--tw-drop-shadow-color,#0000001a));
        --tw-drop-shadow: var(--tw-drop-shadow-size);
        filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)
    }

    .drop-shadow-\[0_2px_4px_rgba\(0\,0\,0\,0\.1\)\] {
        --tw-drop-shadow-size: drop-shadow(0 2px 4px var(--tw-drop-shadow-color,#0000001a));
        --tw-drop-shadow: var(--tw-drop-shadow-size);
        filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)
    }

    .grayscale {
        --tw-grayscale: grayscale(100%);
        filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)
    }

    .invert {
        --tw-invert: invert(100%);
        filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)
    }

    .filter {
        filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)
    }

    .transition {
        transition-property: color,background-color,border-color,outline-color,text-decoration-color,fill,stroke,--tw-gradient-from,--tw-gradient-via,--tw-gradient-to,opacity,box-shadow,transform,translate,scale,rotate,filter,-webkit-backdrop-filter,backdrop-filter,display,visibility,content-visibility,overlay,pointer-events;
        transition-timing-function: var(--tw-ease,var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,var(--default-transition-duration))
    }

    .duration-150 {
        --tw-duration: .15s;
        transition-duration: .15s
    }

    .duration-500 {
        --tw-duration: .5s;
        transition-duration: .5s
    }

    .ease-in-out {
        --tw-ease: var(--ease-in-out);
        transition-timing-function: var(--ease-in-out)
    }

    .ease-out {
        --tw-ease: var(--ease-out);
        transition-timing-function: var(--ease-out)
    }

    @media (hover: hover) {
        .hover\:border-primary-800:hover {
            border-color:var(--color-primary-800)
        }

        .hover\:bg-gray-100:hover {
            background-color: var(--color-gray-100)
        }

        .hover\:bg-gray-700:hover {
            background-color: var(--color-gray-700)
        }

        .hover\:bg-gray-800:hover {
            background-color: var(--color-gray-800)
        }

        .hover\:bg-primary-600:hover {
            background-color: var(--color-primary-600)
        }

        .hover\:bg-primary-800:hover {
            background-color: var(--color-primary-800)
        }

        .hover\:from-primary-600:hover {
            --tw-gradient-from: var(--color-primary-600);
            --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))
        }

        .hover\:to-secondary-600:hover {
            --tw-gradient-to: var(--color-secondary-600);
            --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))
        }

        .hover\:text-gray-900:hover {
            color: var(--color-gray-900)
        }

        .hover\:text-primary-400:hover {
            color: var(--color-primary-400)
        }

        .hover\:underline:hover {
            text-decoration-line: underline
        }

        .hover\:decoration-3:hover {
            text-decoration-thickness: 3px
        }

        .hover\:decoration-4:hover {
            text-decoration-thickness: 4px
        }

        .hover\:underline-offset-4:hover {
            text-underline-offset: 4px
        }

        .hover\:underline-offset-8:hover {
            text-underline-offset: 8px
        }

        .hover\:shadow-md:hover {
            --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color,#0000001a),0 2px 4px -2px var(--tw-shadow-color,#0000001a);
            box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
        }

        .hover\:shadow-xl:hover {
            --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color,#0000001a),0 8px 10px -6px var(--tw-shadow-color,#0000001a);
            box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
        }
    }

    .focus\: border-primary-500:focus {
        border-color:var(--color-primary-500)
    }

    .focus\: ring-4:focus {
        --tw-ring-shadow:var(--tw-ring-inset,)0 0 0 calc(4px + var(--tw-ring-offset-width))var(--tw-ring-color,currentcolor);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
    }

    .focus\: ring-blue-300:focus {
        --tw-ring-color:var(--color-blue-300)
    }

    .focus\: ring-gray-200:focus {
        --tw-ring-color:var(--color-gray-200)
    }

    .focus\: ring-primary-300:focus {
        --tw-ring-color:var(--color-primary-300)
    }

    .focus\: ring-primary-500:focus {
        --tw-ring-color:var(--color-primary-500)
    }

    .focus\: outline-hidden:focus {
        --tw-outline-style:none;
        outline-style: none
    }

    @media (forced-colors:active) {
        .focus\:outline-hidden:focus {
            outline-offset: 2px;
            outline: 2px solid #0000
        }
    }

    .disabled\: pointer-events-none:disabled {
        pointer-events:none
    }

    .disabled\: opacity-50:disabled {
        opacity:.5
    }

    @media (prefers-reduced-motion:no-preference) {
        .motion-safe\:scroll-smooth {
            scroll-behavior: smooth
        }
    }

    @media (min-width: 40rem) {
        .sm\:-mt-2 {
            margin-top:calc(var(--spacing)*-2)
        }

        .sm\:mt-3 {
            margin-top: calc(var(--spacing)*3)
        }

        .sm\:mt-\[-1px\] {
            margin-top: -1px
        }

        .sm\:mr-3 {
            margin-right: calc(var(--spacing)*3)
        }

        .sm\:mb-0 {
            margin-bottom: calc(var(--spacing)*0)
        }

        .sm\:block {
            display: block
        }

        .sm\:min-h-screen {
            min-height: 100vh
        }

        .sm\:w-auto {
            width: auto
        }

        .sm\:flex-row {
            flex-direction: row
        }

        .sm\:justify-center {
            justify-content: center
        }

        .sm\:gap-12 {
            gap: calc(var(--spacing)*12)
        }

        .sm\:rounded-xl {
            border-radius: var(--radius-xl)
        }

        .sm\:p-1 {
            padding: calc(var(--spacing)*1)
        }

        .sm\:p-6 {
            padding: calc(var(--spacing)*6)
        }

        .sm\:px-6 {
            padding-inline:calc(var(--spacing)*6)}

        .sm\: py-16 {
            padding-block:calc(var(--spacing)*16)
        }

        .sm\:text-3xl {
            font-size: var(--text-3xl);
            line-height: var(--tw-leading,var(--text-3xl--line-height))
        }

        .sm\:text-4xl {
            font-size: var(--text-4xl);
            line-height: var(--tw-leading,var(--text-4xl--line-height))
        }

        .sm\:text-xl {
            font-size: var(--text-xl);
            line-height: var(--tw-leading,var(--text-xl--line-height))
        }

        .sm\:leading-tight {
            --tw-leading: var(--leading-tight);
            line-height: var(--leading-tight)
        }

        .sm\:whitespace-nowrap {
            white-space: nowrap
        }
    }

    @media (min-width: 48rem) {
        .md\:order-1 {
            order:1
        }

        .md\:-mt-20 {
            margin-top: calc(var(--spacing)*-20)
        }

        .md\:mb-0 {
            margin-bottom: calc(var(--spacing)*0)
        }

        .md\:mb-16 {
            margin-bottom: calc(var(--spacing)*16)
        }

        .md\:ml-4 {
            margin-left: calc(var(--spacing)*4)
        }

        .md\:flex {
            display: flex
        }

        .md\:hidden {
            display: none
        }

        .md\:inline {
            display: inline
        }

        .md\:h-auto {
            height: auto
        }

        .md\:h-screen {
            height: 100vh
        }

        .md\:min-h-screen {
            min-height: 100vh
        }

        .md\:w-auto {
            width: auto
        }

        .md\:max-w-none {
            max-width: none
        }

        .md\:flex-row {
            flex-direction: row
        }

        .md\:items-center {
            align-items: center
        }

        .md\:justify-between {
            justify-content: space-between
        }

        .md\:self-center {
            align-self: center
        }

        .md\:bg-white\/90 {
            background-color: #ffffffe6
        }

        @supports (color: color-mix(in lab,red,red)) {
            .md\:bg-white\/90 {
                background-color:color-mix(in oklab,var(--color-white)90%,transparent)
            }
        }

        .md\:px-4 {
            padding-inline:calc(var(--spacing)*4)}

        .md\: py-8 {
            padding-block:calc(var(--spacing)*8)
        }

        .md\:py-20 {
            padding-block:calc(var(--spacing)*20)}

        .md\: pt-0 {
            padding-top:calc(var(--spacing)*0)
        }

        .md\:pb-16 {
            padding-bottom: calc(var(--spacing)*16)
        }

        .md\:text-2xl {
            font-size: var(--text-2xl);
            line-height: var(--tw-leading,var(--text-2xl--line-height))
        }

        .md\:text-3xl {
            font-size: var(--text-3xl);
            line-height: var(--tw-leading,var(--text-3xl--line-height))
        }

        .md\:text-5xl {
            font-size: var(--text-5xl);
            line-height: var(--tw-leading,var(--text-5xl--line-height))
        }

        .md\:text-6xl {
            font-size: var(--text-6xl);
            line-height: var(--tw-leading,var(--text-6xl--line-height))
        }

        .md\:text-base {
            font-size: var(--text-base);
            line-height: var(--tw-leading,var(--text-base--line-height))
        }

        .md\:text-\[3\.50rem\] {
            font-size: 3.5rem
        }

        .md\:backdrop-blur-md {
            --tw-backdrop-blur: blur(var(--blur-md));
            -webkit-backdrop-filter: var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-sepia,);
            backdrop-filter: var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-sepia,)
        }
    }

    @media (min-width: 64rem) {
        .lg\:prose-xl {
            font-size:1.25rem;
            line-height: 1.8
        }

        .lg\:prose-xl :where(p):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 1.2em;
            margin-bottom: 1.2em
        }

        .lg\:prose-xl :where([class~=lead]):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 1em;
            margin-bottom: 1em;
            font-size: 1.2em;
            line-height: 1.5
        }

        .lg\:prose-xl :where(blockquote):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 1.6em;
            margin-bottom: 1.6em;
            padding-inline-start:1.06667em}

        .lg\:prose-xl :where(h1):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 0;
            margin-bottom: .857143em;
            font-size: 2.8em;
            line-height: 1
        }

        .lg\:prose-xl :where(h2):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 1.55556em;
            margin-bottom: .888889em;
            font-size: 1.8em;
            line-height: 1.11111
        }

        .lg\:prose-xl :where(h3):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 1.6em;
            margin-bottom: .666667em;
            font-size: 1.5em;
            line-height: 1.33333
        }

        .lg\:prose-xl :where(h4):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 1.8em;
            margin-bottom: .6em;
            line-height: 1.6
        }

        .lg\:prose-xl :where(img):not(:where([class~=not-prose],[class~=not-prose] *)),.lg\:prose-xl :where(picture):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 2em;
            margin-bottom: 2em
        }

        .lg\:prose-xl :where(picture>img):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 0;
            margin-bottom: 0
        }

        .lg\:prose-xl :where(video):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 2em;
            margin-bottom: 2em
        }

        .lg\:prose-xl :where(kbd):not(:where([class~=not-prose],[class~=not-prose] *)) {
            padding-top: .25em;
            padding-inline-end:.4em;padding-bottom: .25em;
            border-radius: .3125rem;
            padding-inline-start:.4em;font-size: .9em
        }

        .lg\:prose-xl :where(code):not(:where([class~=not-prose],[class~=not-prose] *)) {
            font-size: .9em
        }

        .lg\:prose-xl :where(h2 code):not(:where([class~=not-prose],[class~=not-prose] *)) {
            font-size: .861111em
        }

        .lg\:prose-xl :where(h3 code):not(:where([class~=not-prose],[class~=not-prose] *)) {
            font-size: .9em
        }

        .lg\:prose-xl :where(pre):not(:where([class~=not-prose],[class~=not-prose] *)) {
            padding-top: 1.11111em;
            padding-inline-end:1.33333em;padding-bottom: 1.11111em;
            border-radius: .5rem;
            margin-top: 2em;
            margin-bottom: 2em;
            padding-inline-start:1.33333em;font-size: .9em;
            line-height: 1.77778
        }

        .lg\:prose-xl :where(ol):not(:where([class~=not-prose],[class~=not-prose] *)),.lg\:prose-xl :where(ul):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 1.2em;
            margin-bottom: 1.2em;
            padding-inline-start:1.6em}

        .lg\:prose-xl :where(li):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: .6em;
            margin-bottom: .6em
        }

        .lg\:prose-xl :where(ol>li):not(:where([class~=not-prose],[class~=not-prose] *)),.lg\:prose-xl :where(ul>li):not(:where([class~=not-prose],[class~=not-prose] *)) {
            padding-inline-start:.4em}

        .lg\:prose-xl :where(.lg\:prose-xl>ul>li p):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: .8em;
            margin-bottom: .8em
        }

        .lg\:prose-xl :where(.lg\:prose-xl>ul>li>p:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 1.2em
        }

        .lg\:prose-xl :where(.lg\:prose-xl>ul>li>p:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-bottom: 1.2em
        }

        .lg\:prose-xl :where(.lg\:prose-xl>ol>li>p:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 1.2em
        }

        .lg\:prose-xl :where(.lg\:prose-xl>ol>li>p:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-bottom: 1.2em
        }

        .lg\:prose-xl :where(ul ul,ul ol,ol ul,ol ol):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: .8em;
            margin-bottom: .8em
        }

        .lg\:prose-xl :where(dl):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 1.2em;
            margin-bottom: 1.2em
        }

        .lg\:prose-xl :where(dt):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 1.2em
        }

        .lg\:prose-xl :where(dd):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: .6em;
            padding-inline-start:1.6em}

        .lg\:prose-xl :where(hr):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 2.8em;
            margin-bottom: 2.8em
        }

        .lg\:prose-xl :where(hr+*):not(:where([class~=not-prose],[class~=not-prose] *)),.lg\:prose-xl :where(h2+*):not(:where([class~=not-prose],[class~=not-prose] *)),.lg\:prose-xl :where(h3+*):not(:where([class~=not-prose],[class~=not-prose] *)),.lg\:prose-xl :where(h4+*):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 0
        }

        .lg\:prose-xl :where(table):not(:where([class~=not-prose],[class~=not-prose] *)) {
            font-size: .9em;
            line-height: 1.55556
        }

        .lg\:prose-xl :where(thead th):not(:where([class~=not-prose],[class~=not-prose] *)) {
            padding-inline-end:.666667em;padding-bottom: .888889em;
            padding-inline-start:.666667em}

        .lg\:prose-xl :where(thead th:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
            padding-inline-start:0}

        .lg\:prose-xl :where(thead th:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
            padding-inline-end:0}

        .lg\:prose-xl :where(tbody td,tfoot td):not(:where([class~=not-prose],[class~=not-prose] *)) {
            padding-top: .888889em;
            padding-inline-end:.666667em;padding-bottom: .888889em;
            padding-inline-start:.666667em}

        .lg\:prose-xl :where(tbody td:first-child,tfoot td:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
            padding-inline-start:0}

        .lg\:prose-xl :where(tbody td:last-child,tfoot td:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
            padding-inline-end:0}

        .lg\:prose-xl :where(figure):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 2em;
            margin-bottom: 2em
        }

        .lg\:prose-xl :where(figure>*):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 0;
            margin-bottom: 0
        }

        .lg\:prose-xl :where(figcaption):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 1em;
            font-size: .9em;
            line-height: 1.55556
        }

        .lg\:prose-xl :where(.lg\:prose-xl>:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-top: 0
        }

        .lg\:prose-xl :where(.lg\:prose-xl>:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
            margin-bottom: 0
        }

        .lg\:-mt-10 {
            margin-top: calc(var(--spacing)*-10)
        }

        .lg\:grid-cols-2 {
            grid-template-columns: repeat(2,minmax(0,1fr))
        }

        .lg\:py-20 {
            padding-block:calc(var(--spacing)*20)}
    }

    @media (min-width: 96rem) {
        .\32xl\:text-\[20px\] {
            font-size:20px
        }
    }

    @media (prefers-color-scheme: dark) {
        .dark\:border-b-0 {
            border-bottom-style:var(--tw-border-style);
            border-bottom-width: 0
        }

        .dark\:border-gray-600 {
            border-color: var(--color-gray-600)
        }

        .dark\:border-slate-800 {
            border-color: var(--color-slate-800)
        }

        .dark\:bg-black\/20 {
            background-color: #0003
        }

        @supports (color: color-mix(in lab,red,red)) {
            .dark\:bg-black\/20 {
                background-color:color-mix(in oklab,var(--color-black)20%,transparent)
            }
        }

        .dark\:bg-gray-200 {
            background-color: var(--color-gray-200)
        }

        .dark\:bg-gray-700 {
            background-color: var(--color-gray-700)
        }

        .dark\:bg-inherit {
            background-color: inherit
        }

        .dark\:bg-orange-200 {
            background-color: var(--color-orange-200)
        }

        .dark\:bg-primary-600 {
            background-color: var(--color-primary-600)
        }

        .dark\:bg-primary-800\/80 {
            background-color: #1e40afcc
        }

        @supports (color: color-mix(in lab,red,red)) {
            .dark\:bg-primary-800\/80 {
                background-color:color-mix(in oklab,var(--color-primary-800)80%,transparent)
            }
        }

        .dark\:bg-sky-200 {
            background-color: var(--color-sky-200)
        }

        .dark\:bg-slate-700 {
            background-color: var(--color-slate-700)
        }

        .dark\:bg-slate-950 {
            background-color: var(--color-slate-950)
        }

        .dark\:bg-teal-200 {
            background-color: var(--color-teal-200)
        }

        .dark\:text-black {
            color: var(--color-black)
        }

        .dark\:text-gray-200\/90 {
            color: #e5e7ebe6
        }

        @supports (color: color-mix(in lab,red,red)) {
            .dark\:text-gray-200\/90 {
                color:color-mix(in oklab,var(--color-gray-200)90%,transparent)
            }
        }

        .dark\:text-gray-300 {
            color: var(--color-gray-300)
        }

        .dark\:text-gray-400 {
            color: var(--color-gray-400)
        }

        .dark\:text-primary-400 {
            color: var(--color-primary-400)
        }

        .dark\:text-slate-200 {
            color: var(--color-slate-200)
        }

        .dark\:text-slate-300 {
            color: var(--color-slate-300)
        }

        .dark\:text-slate-400 {
            color: var(--color-slate-400)
        }

        .dark\:text-white {
            color: var(--color-white)
        }

        .dark\:decoration-white {
            -webkit-text-decoration-color: var(--color-white);
            text-decoration-color: var(--color-white)
        }

        .dark\:placeholder-gray-400::placeholder {
            color: var(--color-gray-400)
        }

        .dark\:shadow-lg {
            --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color,#0000001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a);
            box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
        }

        .dark\:prose-invert {
            --tw-prose-body: var(--tw-prose-invert-body);
            --tw-prose-headings: var(--tw-prose-invert-headings);
            --tw-prose-lead: var(--tw-prose-invert-lead);
            --tw-prose-links: var(--tw-prose-invert-links);
            --tw-prose-bold: var(--tw-prose-invert-bold);
            --tw-prose-counters: var(--tw-prose-invert-counters);
            --tw-prose-bullets: var(--tw-prose-invert-bullets);
            --tw-prose-hr: var(--tw-prose-invert-hr);
            --tw-prose-quotes: var(--tw-prose-invert-quotes);
            --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
            --tw-prose-captions: var(--tw-prose-invert-captions);
            --tw-prose-kbd: var(--tw-prose-invert-kbd);
            --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
            --tw-prose-code: var(--tw-prose-invert-code);
            --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
            --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
            --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
            --tw-prose-td-borders: var(--tw-prose-invert-td-borders)
        }

        @media (hover: hover) {
            .dark\:hover\:bg-gray-600:hover {
                background-color:var(--color-gray-600)
            }

            .dark\:hover\:bg-gray-700:hover {
                background-color: var(--color-gray-700)
            }

            .dark\:hover\:bg-gray-800:hover {
                background-color: var(--color-gray-800)
            }

            .dark\:hover\:bg-primary-700:hover {
                background-color: var(--color-primary-700)
            }

            .dark\:hover\:text-primary-200:hover {
                color: var(--color-primary-200)
            }

            .dark\:hover\:text-white:hover {
                color: var(--color-white)
            }
        }

        .dark\:focus\:border-primary-500:focus {
            border-color: var(--color-primary-500)
        }

        .dark\:focus\:ring-blue-800:focus {
            --tw-ring-color: var(--color-blue-800)
        }

        .dark\:focus\:ring-gray-700:focus {
            --tw-ring-color: var(--color-gray-700)
        }

        .dark\:focus\:ring-primary-500:focus {
            --tw-ring-color: var(--color-primary-500)
        }

        .dark\:focus\:ring-primary-800:focus {
            --tw-ring-color: var(--color-primary-800)
        }

        @media (min-width: 40rem) {
            .dark\:sm\:border {
                border-style:var(--tw-border-style);
                border-width: 1px
            }

            @media (hover: hover) {
                .dark\:sm\:hover\:shadow-indigo-500\/20:hover {
                    --tw-shadow-color:#625fff33
                }

                @supports (color: color-mix(in lab,red,red)) {
                    .dark\:sm\:hover\:shadow-indigo-500\/20:hover {
                        --tw-shadow-color:color-mix(in oklab,color-mix(in oklab,var(--color-indigo-500)20%,transparent)var(--tw-shadow-alpha),transparent)
                    }
                }
            }
        }

        @media (min-width: 48rem) {
            .dark\:md\:bg-slate-950\/90 {
                background-color:#020618e6
            }

            @supports (color: color-mix(in lab,red,red)) {
                .dark\:md\:bg-slate-950\/90 {
                    background-color:color-mix(in oklab,var(--color-slate-950)90%,transparent)
                }
            }
        }
    }

    .prose-headings\: font-bold :where(h1,h2,h3,h4,h5,h6,th):not(:where([class~=not-prose],[class~=not-prose] *)) {
        --tw-font-weight:var(--font-weight-bold);
        font-weight: var(--font-weight-bold)
    }

    .prose-headings\: tracking-tighter :where(h1,h2,h3,h4,h5,h6,th):not(:where([class~=not-prose],[class~=not-prose] *)) {
        --tw-tracking:var(--tracking-tighter);
        letter-spacing: var(--tracking-tighter)
    }

    @media (prefers-color-scheme: dark) {
        .dark\:prose-headings\:text-slate-300 :where(h1,h2,h3,h4,h5,h6,th):not(:where([class~=not-prose],[class~=not-prose] *)) {
            color:var(--color-slate-300)
        }
    }

    .prose-h2\: mt-24 :where(h2):not(:where([class~=not-prose],[class~=not-prose] *)),.prose-h3\:mt-24 :where(h3):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:calc(var(--spacing)*24)
    }

    .prose-h4\: tracking-normal :where(h4):not(:where([class~=not-prose],[class~=not-prose] *)),.prose-h5\:tracking-normal :where(h5):not(:where([class~=not-prose],[class~=not-prose] *)),.prose-h6\:tracking-normal :where(h6):not(:where([class~=not-prose],[class~=not-prose] *)) {
        --tw-tracking:var(--tracking-normal);
        letter-spacing: var(--tracking-normal)
    }

    .prose-a\: text-black\/75 :where(a):not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:#000000bf
    }

    @supports (color: color-mix(in lab,red,red)) {
        .prose-a\:text-black\/75 :where(a):not(:where([class~=not-prose],[class~=not-prose] *)) {
            color:color-mix(in oklab,var(--color-black)75%,transparent)
        }
    }

    .prose-a\: text-primary-600 :where(a):not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--color-primary-600)
    }

    .prose-a\: underline :where(a):not(:where([class~=not-prose],[class~=not-prose] *)) {
        text-decoration-line:underline
    }

    .prose-a\: decoration-primary-500 :where(a):not(:where([class~=not-prose],[class~=not-prose] *)) {
        -webkit-text-decoration-color:var(--color-primary-500);
        text-decoration-color: var(--color-primary-500)
    }

    .prose-a\: decoration-2 :where(a):not(:where([class~=not-prose],[class~=not-prose] *)) {
        text-decoration-thickness:2px
    }

    .prose-a\: underline-offset-4 :where(a):not(:where([class~=not-prose],[class~=not-prose] *)) {
        text-underline-offset:4px
    }

    @media (hover: hover) {
        .prose-a\:hover\:text-black :where(a):not(:where([class~=not-prose],[class~=not-prose] *)):hover {
            color:var(--color-black)
        }

        .prose-a\:hover\:decoration-primary-600 :where(a):not(:where([class~=not-prose],[class~=not-prose] *)):hover {
            -webkit-text-decoration-color: var(--color-primary-600);
            text-decoration-color: var(--color-primary-600)
        }

        .prose-a\:hover\:decoration-4 :where(a):not(:where([class~=not-prose],[class~=not-prose] *)):hover {
            text-decoration-thickness: 4px
        }
    }

    @media (prefers-color-scheme: dark) {
        .dark\:prose-a\:text-primary-400 :where(a):not(:where([class~=not-prose],[class~=not-prose] *)) {
            color:var(--color-primary-400)
        }

        .dark\:prose-a\:text-white\/90 :where(a):not(:where([class~=not-prose],[class~=not-prose] *)) {
            color: #ffffffe6
        }

        @supports (color: color-mix(in lab,red,red)) {
            .dark\:prose-a\:text-white\/90 :where(a):not(:where([class~=not-prose],[class~=not-prose] *)) {
                color:color-mix(in oklab,var(--color-white)90%,transparent)
            }
        }

        @media (hover: hover) {
            .dark\:prose-a\:hover\:text-white :where(a):not(:where([class~=not-prose],[class~=not-prose] *)):hover {
                color:var(--color-white)
            }
        }
    }

    .prose-code\: before\:hidden :where(code):not(:where([class~=not-prose],[class~=not-prose] *)):before,.prose-code\:after\:hidden :where(code):not(:where([class~=not-prose],[class~=not-prose] *)):after {
        content:var(--tw-content);
        display: none
    }

    .prose-img\: rounded-md :where(img):not(:where([class~=not-prose],[class~=not-prose] *)) {
        border-radius:var(--radius-md)
    }

    .prose-img\: shadow-lg :where(img):not(:where([class~=not-prose],[class~=not-prose] *)) {
        --tw-shadow:0 10px 15px -3px var(--tw-shadow-color,#0000001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
    }
}

[data-aw-toggle-menu] path {
    transition-property: color,background-color,border-color,outline-color,text-decoration-color,fill,stroke,--tw-gradient-from,--tw-gradient-via,--tw-gradient-to,opacity,box-shadow,transform,translate,scale,rotate,filter,-webkit-backdrop-filter,backdrop-filter,display,visibility,content-visibility,overlay,pointer-events;
    transition-timing-function: var(--tw-ease,var(--default-transition-timing-function));
    transition-duration: var(--tw-duration,var(--default-transition-duration))
}

[data-aw-toggle-menu].expanded g>path:first-child {
    --tw-translate-x: -3px;
    --tw-translate-y: 15px;
    translate: var(--tw-translate-x)var(--tw-translate-y);
    rotate: -45deg
}

[data-aw-toggle-menu].expanded g>path:last-child {
    --tw-translate-x: 14px;
    --tw-translate-y: -8px;
    translate: var(--tw-translate-x)var(--tw-translate-y);
    rotate: 45deg
}

kbd {
    color: #404d60!important;
    background-color: #fcfcfc!important;
    font-family: monospace!important
}

@media (prefers-color-scheme: dark) {
    kbd {
        color:#b3bdcc!important;
        background-color: #1f2937!important;
        border: 1px solid #747c8b!important
    }
}

.footnotes {
    margin-top: 100px!important
}

@property --tw-leading {
    syntax: "*";
    inherits: false
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-duration {
    syntax: "*";
    inherits: false
}

@property --tw-ease {
    syntax: "*";
    inherits: false
}

@property --tw-rotate-x {
    syntax: "*";
    inherits: false
}

@property --tw-rotate-y {
    syntax: "*";
    inherits: false
}

@property --tw-rotate-z {
    syntax: "*";
    inherits: false
}

@property --tw-skew-x {
    syntax: "*";
    inherits: false
}

@property --tw-skew-y {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-position {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%
}

@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%
}

@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-tracking {
    syntax: "*";
    inherits: false
}

@property --tw-blur {
    syntax: "*";
    inherits: false
}

@property --tw-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-invert {
    syntax: "*";
    inherits: false
}

@property --tw-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-drop-shadow-size {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-content {
    syntax: "*";
    inherits: false;
    initial-value: ""
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

img {
    content-visibility: auto
}
